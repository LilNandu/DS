#include <stdio.h>
#include <stdlib.h>

#define MAX 5  // Define the maximum size of the queue

int queue[MAX];  // Array to store queue elements
int front = -1;  // Initialize the front of the queue
int rear = -1;   // Initialize the rear of the queue

// Function to enqueue (insert) an element into the queue
void enqueue(int data) {
    if (rear == MAX - 1) {
        printf("Queue Overflow! Cannot insert %d\n", data);
        return;
    }
    if (front == -1) {
        front = 0;  // Set front to 0 if the first element is inserted
    }
    rear++;
    queue[rear] = data;
    printf("%d enqueued into the queue.\n", data);
}

// Function to dequeue (remove) an element from the queue
void dequeue() {
    if (front == -1 || front > rear) {
        printf("Queue Underflow! The queue is empty.\n");
        return;
    }
    printf("%d dequeued from the queue.\n", queue[front]);
    front++;
    if (front > rear) {  // If the queue becomes empty, reset front and rear
        front = rear = -1;
    }
}

// Function to display the elements of the queue
void display() {
    if (front == -1) {
        printf("The queue is empty.\n");
        return;
    }
    printf("Queue elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}

int main() {
    int choice, data;

    while (1) {
        printf("\nQueue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the element to enqueue: ");
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
